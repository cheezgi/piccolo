
(* builtin: char, alpha, alphanumeric, number *)

grammar = piccolo;
piccolo = {fn | data};
fn = "fn", name, "(", [name, {",", name}], ")", block;
name = alpha, {alphanumeric};
block = "do", {stmt}, "end";
stmt = {expr} | assignment, nl;
expr = access | name | flow | literal | fncall | math | construct | index;
access = expr, ".", expr;
flow = if | while | for;
if = "if", expr, block, ["else", block];
while = "while", expr, block;
for = "for", name, "in", expr, block;
literal = number | string | bool | exrange | inrange | array;
string = "\"", {char}, "\"";
bool = "true" | "false";
exrange = expr, "..", expr;
inrange = expr, "...", expr;
array = "[", [expr, {",", expr}], "]";
fncall = expr, "(", [expr, [{",", expr}]], ")";
math = (unary, expr) | (expr, op, expr);
unary = "-" | "!";
op = "+" | "*" | "-" | "/" | "%" | "&" | "|" | "^" | "||" | "&&";
construct = "new", name, ["(", [assignment, {",", assignment}], ")"];
index = expr, "[", expr, "]";
assignment = name, "=", expr;
nl = "\n";
data = "data", name, "is", [block], {fn}, "end";

(*grammar    = piccolo ;
piccolo    = [{ fn | data, nl}], [fn | data, [nl]] ;
block      = "do", [{item, nl}], item, [nl], "end" ;
item       = assignment | expr ;
expr       = flow | block | access | fncall | construct | math | literal | name ;
assignment = name | namelist, "=", expr ;
name       = letter, { letter | digit | "_" } ;
fncall     = expr, "(", {expr, ","}, ")" ;
access     = expr, "." expr ;
fn         = "fn", name, "(", {name, ","}, ")", block ;
math       = unary, expr | expr, op, expr ;
unary      = "!" | "-" ;
op         = "*" | "+" | "/" | "-" | "%" | "&" | "|" ;
literal    = {digit} | bool | string | range ;
string     = "\"", {letter}, "\"" ;
range      = expr, "...", expr ;
bool       = "true" | "false" ;
flow       = if | while | for, block, ["else", block] ;
if         = "if", expr ;
while      = "while", expr ;
for        = "for", expr, "in", expr ;
construct  = "new", name, ["(", {assignment, ","}, ")"] ;
data       = "data", name, "is", attr, methods, "end" ;
attr       = {["pub"], assignment, nl} ;
methods    = {fn, nl} ;*)

